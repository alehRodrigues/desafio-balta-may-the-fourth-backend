// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StarisApi.DbContexts;

#nullable disable

namespace StarisApi.Migrations
{
    [DbContext(typeof(SqliteContext))]
    [Migration("20240422152507_AlterTables_Corrige_NomesTabelas")]
    partial class AlterTables_Corrige_NomesTabelas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("StarisApi.Models.Films.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Episode")
                        .HasColumnType("int")
                        .HasAnnotation("CheckConstraint", "CK_Episode_MinValue: Episode >= 1");

                    b.Property<string>("OpeningCrawl")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Producer")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReleaseDate")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Films", (string)null);
                });

            modelBuilder.Entity("StarisApi.Models.FilmsPlanet.FilmPlanet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("PlanetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.HasIndex("PlanetId");

                    b.ToTable("FilmsPlanets", (string)null);
                });

            modelBuilder.Entity("StarisApi.Models.FilmsStarship.FilmStarship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("StarshipId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.HasIndex("StarshipId");

                    b.ToTable("FilmsStarships", (string)null);
                });

            modelBuilder.Entity("StarisApi.Models.FilmsVehicle.FilmVehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.HasIndex("VehicleId");

                    b.ToTable("FilmVehicles", (string)null);
                });

            modelBuilder.Entity("StarisApi.Models.People.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BirthYear")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("EyeColor")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("HairColor")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Mass")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<int>("PlanetId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SkinColor")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("PlanetId");

                    b.ToTable("People", (string)null);
                });

            modelBuilder.Entity("StarisApi.Models.PeopleFilms.PersonFilm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.HasIndex("PersonId");

                    b.ToTable("PeopleMovies", (string)null);
                });

            modelBuilder.Entity("StarisApi.Models.PeoplePlanets.PersonPlanet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("PlanetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("PlanetId");

                    b.ToTable("PeoplePlanets", (string)null);
                });

            modelBuilder.Entity("StarisApi.Models.Planets.Planet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Climate")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Diameter")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Gravity")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("OrbitalPeriod")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Population")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("RotationSpeed")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("SurfaceWater")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Terrain")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Planets", (string)null);
                });

            modelBuilder.Entity("StarisApi.Models.StarShips.Starship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CargoCapacity")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Consumables")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CostInCredits")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Crew")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("HyperDriveRating")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Lenght")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("MaxAtmospheringSpeed")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Megalights")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Passengers")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("StarshipClass")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Starships", (string)null);
                });

            modelBuilder.Entity("StarisApi.Models.Vehicles.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CargoCapacity")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Consumables")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CostInCredits")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Crew")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Lenght")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("MaxAtmospheringSpeed")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Passengers")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("VehicleClass")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles", (string)null);
                });

            modelBuilder.Entity("StarisApi.Models.FilmsPlanet.FilmPlanet", b =>
                {
                    b.HasOne("StarisApi.Models.Films.Film", "Film")
                        .WithMany("Planets")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarisApi.Models.Planets.Planet", "Planet")
                        .WithMany()
                        .HasForeignKey("PlanetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Planet");
                });

            modelBuilder.Entity("StarisApi.Models.FilmsStarship.FilmStarship", b =>
                {
                    b.HasOne("StarisApi.Models.Films.Film", "Film")
                        .WithMany("Starships")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarisApi.Models.StarShips.Starship", "Starship")
                        .WithMany()
                        .HasForeignKey("StarshipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Starship");
                });

            modelBuilder.Entity("StarisApi.Models.FilmsVehicle.FilmVehicle", b =>
                {
                    b.HasOne("StarisApi.Models.Films.Film", "Film")
                        .WithMany("Vehicles")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarisApi.Models.Vehicles.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("StarisApi.Models.People.Person", b =>
                {
                    b.HasOne("StarisApi.Models.Planets.Planet", "Planet")
                        .WithMany("People")
                        .HasForeignKey("PlanetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Planet");
                });

            modelBuilder.Entity("StarisApi.Models.PeopleFilms.PersonFilm", b =>
                {
                    b.HasOne("StarisApi.Models.Films.Film", "Film")
                        .WithMany("People")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarisApi.Models.People.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("StarisApi.Models.PeoplePlanets.PersonPlanet", b =>
                {
                    b.HasOne("StarisApi.Models.People.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarisApi.Models.Planets.Planet", "Planet")
                        .WithMany()
                        .HasForeignKey("PlanetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Planet");
                });

            modelBuilder.Entity("StarisApi.Models.Films.Film", b =>
                {
                    b.Navigation("People");

                    b.Navigation("Planets");

                    b.Navigation("Starships");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("StarisApi.Models.Planets.Planet", b =>
                {
                    b.Navigation("People");
                });
#pragma warning restore 612, 618
        }
    }
}
